'use client';

import { css } from '@cerberus/styled-system/css';
import Link from 'next/link';
import { useRef, type JSX } from 'react';
import { ProductMetaAttributes } from '../ProductMetaAttributes/ProductMetaAttributes';
import { flex, hstack } from '@cerberus/styled-system/patterns';
import { usePathname } from 'next/navigation';
import { ProductTypeTag } from '../ProductTypeTag';
import { useMatomoTrackEvent } from '@/hooks/useMatomoTrackEvent/useMatomoTrackEvent';
import type { sqlGetMarketplaceProduct } from '@/app/api/marketplace/products';

//TODO: Add a type for product from the api

export const TEMPORARY_VENDOR_LOGO_PLACEHOLDER = ({
  height = '20',
  width = '20 '
}) => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width={width}
    height={height}
    viewBox="0 0 20 20"
    fill="none"
  >
    <g clipPath="url(#clip0_4324_1074)">
      <path
        d="M20 20H0.00629485C0.00377691 19.9899 0.00251794 19.9797 0 19.9696C0.00125897 19.8442 0.00503588 19.7176 0.00503588 19.5922C0.00503588 13.1543 0.00503588 6.71522 0.00503588 0.277373C0.00503588 0.184915 0.0125897 0.0937243 0.0176256 0H20V20ZM5.06861 8.26547C5.13408 8.25407 5.19955 8.23254 5.26375 8.2338C6.34521 8.24267 7.42792 8.2566 8.50938 8.26167C8.65038 8.26167 8.68564 8.30473 8.68438 8.44025C8.67053 9.67006 8.66171 10.8999 8.65416 12.1297C8.65416 12.2791 8.58995 12.3463 8.4414 12.3615C8.25003 12.3817 8.05867 12.4147 7.86856 12.4514C7.8182 12.4615 7.77288 12.5033 7.72504 12.5312C7.72882 12.5515 7.73385 12.5705 7.73763 12.5907C7.84842 12.6046 7.95921 12.63 8.07 12.63C8.71963 12.6338 9.368 12.6338 10.0176 12.6325C10.2115 12.6325 10.4041 12.6224 10.598 12.616C10.6093 12.6148 10.6219 12.6122 10.6333 12.611C10.6912 12.5806 10.7503 12.5502 10.8083 12.5198C10.7503 12.4856 10.695 12.4476 10.6333 12.421C10.6018 12.4071 10.5602 12.421 10.525 12.4159C10.3764 12.3969 10.2228 12.3881 10.0806 12.3475C10.0138 12.3285 9.94083 12.2525 9.91817 12.1854C9.88292 12.0803 9.87662 11.96 9.87662 11.8473C9.8741 9.58901 9.87662 7.33202 9.8741 5.07378C9.8741 4.51523 9.97104 4.5051 10.4268 4.4823C10.5552 4.47597 10.6811 4.43417 10.8221 4.40504C10.7352 4.22392 10.5993 4.26192 10.4885 4.26065C9.62483 4.25686 8.76117 4.25939 7.89752 4.26065C7.88493 4.26065 7.87234 4.26192 7.85975 4.26319C7.81569 4.29865 7.77036 4.33411 7.7263 4.36958C7.78044 4.40884 7.83205 4.4747 7.89123 4.4823C8.02468 4.50003 8.16316 4.4823 8.29913 4.48863C8.53708 4.5013 8.62646 4.58996 8.64661 4.82553C8.65416 4.90912 8.65794 4.99272 8.6592 5.07631C8.66549 6.01355 8.67053 6.95206 8.67556 7.8893C8.67556 7.8931 8.66927 7.8969 8.65668 7.91083C8.64157 7.91083 8.61765 7.9159 8.59247 7.9159C7.44555 7.9159 6.29863 7.9159 5.15171 7.9159C5.11394 7.9159 5.07491 7.89817 5.03714 7.88804C5.03714 7.87537 5.03966 7.86144 5.03966 7.84877C5.04218 7.81204 5.04343 7.77531 5.04595 7.73858C5.04847 7.72465 5.05225 7.70945 5.05477 7.69552C5.05602 6.89887 5.05728 6.10348 5.05854 5.30682C5.05854 5.29542 5.05854 5.28402 5.05854 5.27262C5.06106 5.2093 5.06358 5.14724 5.06484 5.08391C5.07491 4.56336 5.13534 4.50383 5.65404 4.4861C5.7472 4.4823 5.84036 4.46457 5.92975 4.44177C5.95745 4.43544 5.99899 4.38604 5.99396 4.36704C5.98514 4.33285 5.95115 4.28852 5.91842 4.27965C5.85421 4.26319 5.78371 4.26319 5.71698 4.26445C5.50296 4.26445 5.28893 4.26825 5.07491 4.27079C5.04218 4.27585 5.00944 4.28092 4.97671 4.28599C4.95279 4.28599 4.93013 4.28599 4.90621 4.28599C4.84578 4.28599 4.78535 4.28599 4.72492 4.28725C4.70225 4.28725 4.67959 4.28725 4.65693 4.28725C4.63805 4.28725 4.6179 4.28725 4.59902 4.28725H4.53229C4.51215 4.28725 4.49326 4.28725 4.47312 4.28725C4.45046 4.28725 4.4278 4.28725 4.40514 4.28725C4.26036 4.28725 4.11557 4.28725 3.97079 4.28725C3.94813 4.28725 3.92421 4.28599 3.90155 4.28472C3.85748 4.27965 3.81342 4.27459 3.76936 4.26825C3.53393 4.26445 3.2985 4.25686 3.06307 4.26065C3.01775 4.26065 2.97369 4.31005 2.92836 4.33665C2.96865 4.37464 3.00516 4.43797 3.05048 4.44684C3.20912 4.47597 3.37278 4.47977 3.53267 4.50383C3.80335 4.54563 3.84238 4.58869 3.8449 4.8572C3.85245 5.57406 3.86126 6.29219 3.86126 7.00906C3.86126 8.35539 3.85623 9.70173 3.85245 11.0493C3.85245 11.4052 3.84741 11.7611 3.84741 12.117C3.84741 12.2563 3.77817 12.3298 3.64472 12.3488C3.46846 12.3729 3.29095 12.3881 3.11721 12.421C3.04671 12.4337 2.9825 12.4831 2.91452 12.516C2.91955 12.5363 2.92333 12.5553 2.92836 12.5755C3.02908 12.5932 3.12854 12.6262 3.22926 12.6262C4.06647 12.6287 4.90495 12.6274 5.74216 12.6224C5.83533 12.6224 5.92723 12.5907 6.01914 12.573C6.02165 12.5527 6.02417 12.5337 6.02795 12.5135C5.97255 12.4856 5.92094 12.4463 5.86177 12.4324C5.76231 12.4071 5.65781 12.3982 5.55584 12.3817C5.24613 12.3345 5.08246 12.1567 5.06484 11.8485C5.06484 11.827 5.06358 11.8055 5.06232 11.7839C5.06232 10.6314 5.06232 9.47755 5.06358 8.325C5.0661 8.30346 5.06736 8.2832 5.06987 8.26167L5.06861 8.26547ZM12.3165 12.8998C12.0937 12.9745 11.8885 13.0277 11.6958 13.1125C11.1217 13.3658 10.9543 13.9421 11.0198 14.4082C11.1029 15.0073 11.4894 15.372 12.0458 15.562C12.6451 15.7672 13.2544 15.8014 13.8801 15.6836C14.4177 15.5823 14.9226 15.4202 15.3682 15.0959C16.0695 14.5868 16.3528 13.8965 16.2546 13.0429C16.179 12.3817 15.5974 11.8827 14.8634 11.8891C14.385 11.8928 13.9078 11.9638 13.4282 11.9942C13.1474 12.0119 12.8616 12.041 12.5872 12.0043C12.2674 11.9612 12.0823 11.6332 12.1566 11.3318C12.2447 10.9746 12.5733 10.753 12.8931 10.8315C13.1109 10.8859 13.3275 10.9493 13.549 10.9847C14.7501 11.176 15.7648 10.2831 15.7535 9.19131C15.7497 8.86328 15.7082 8.53397 15.6729 8.20721C15.649 7.98429 15.761 7.76898 15.9663 7.68919C16.1035 7.63599 16.1652 7.67272 16.1639 7.81711C16.1639 7.8893 16.1438 7.96023 16.1387 8.03116C16.135 8.09322 16.1224 8.16288 16.1438 8.21734C16.2558 8.50484 16.7506 8.5935 16.9583 8.35792C17.1346 8.15781 17.1069 7.91717 17.0326 7.68792C16.9684 7.49161 16.8098 7.37509 16.6109 7.35609C16.3565 7.33202 16.0922 7.31936 15.8706 7.48528C15.7459 7.57773 15.6326 7.68792 15.5244 7.79811C15.4539 7.86904 15.4098 7.87284 15.3292 7.80571C15.1656 7.66766 14.9981 7.53087 14.8168 7.42068C14.4139 7.17624 13.9569 7.22057 13.5289 7.27376C12.7937 7.36495 12.2473 7.76645 12.0232 8.49724C11.7928 9.24957 11.9061 9.94744 12.4777 10.5313C12.5142 10.568 12.5406 10.6136 12.5595 10.6402C12.3719 10.7428 12.2007 10.8302 12.037 10.929C11.4579 11.2798 11.2602 12.2677 12.0962 12.7414C12.1755 12.787 12.246 12.8491 12.3165 12.901V12.8998Z"
        fill="white"
      />
      <path
        d="M15.7245 13.7268C15.7585 14.3867 15.4035 14.778 14.9301 15.0947C14.5159 15.3708 14.0413 15.4746 13.5579 15.462C13.0681 15.4493 12.6111 15.3075 12.2888 14.8882C11.9237 14.4145 11.9527 13.6432 12.3555 13.2012C12.4991 13.0429 12.6778 12.9821 12.883 12.958C13.3866 12.8998 13.889 12.8263 14.3925 12.7782C14.5877 12.7592 14.7929 12.7693 14.9843 12.8086C15.5193 12.92 15.7258 13.1987 15.7258 13.7268H15.7245Z"
        fill="white"
      />
      <path
        d="M14.8344 9.10012C14.8055 9.41549 14.7942 9.73466 14.74 10.0462C14.7123 10.2045 14.6292 10.3629 14.5361 10.4971C14.1987 10.986 13.4999 10.9176 13.2104 10.3743C13.0316 10.0386 12.9775 9.665 12.9686 9.29644C12.9598 8.93294 13.0052 8.56691 13.0543 8.20594C13.0744 8.05522 13.1474 7.90577 13.2255 7.77152C13.3778 7.50808 13.6246 7.39409 13.9255 7.41182C14.2339 7.42955 14.4618 7.58534 14.594 7.86018C14.7828 8.25027 14.8407 8.66696 14.8357 9.10012H14.8344Z"
        fill="white"
      />
    </g>
    <defs>
      <clipPath id="clip0_4324_1074">
        <rect width="20" height="20" fill="white" />
      </clipPath>
    </defs>
  </svg>
);

export const TEMPORARY_CATEGORY_LOGO_PLACEHOLDER = () => (
  <svg
    width="20"
    height="20"
    viewBox="0 0 20 20"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M10 17.5C14.1421 17.5 17.5 14.1421 17.5 10C17.5 5.85786 14.1421 2.5 10 2.5C5.85786 2.5 2.5 5.85786 2.5 10C2.5 14.1421 5.85786 17.5 10 17.5Z"
      fill="white"
    />
  </svg>
);

export function ProductCard({
  product
}: {
  product: Awaited<ReturnType<typeof sqlGetMarketplaceProduct>>['_serviceData'];
}): JSX.Element {
  const titleRef = useRef<HTMLHeadingElement | null>(null);
  const trackMatomoEvent = useMatomoTrackEvent();

  const pathname = usePathname();
  const productDetailPageHref = `${pathname}/products/${product.id}`;

  return (
    <Link
      className={css({
        bg: 'page.surface.200',
        px: '6',
        py: '8',
        borderRadius: 'sm'
      })}
      href={productDetailPageHref}
      onClick={() =>
        trackMatomoEvent(
          'Product',
          'Click',
          `${product?.marketplaceVendorTag} : ${product?.sku}`
        )
      }
    >
      <div className={flex({ direction: 'column', height: 'full', gap: '4' })}>
        <div className={hstack({})}>
          {product?.marketplaceVendor?.logoPath && (
            <span
              className={css({
                display: 'inline-block',
                w: '20px',
                h: '20px',
                verticalAlign: 'middle'
              })}
            >
              <img
                src={product.marketplaceVendor.logoPath}
                alt="Vendor icon"
                className={css({ w: 'full', h: 'full', objectFit: 'cover' })}
              />
            </span>
          )}
          <h4 className={css({ textStyle: 'body-sm' })}>
            {product?.marketplaceVendor?.name}
          </h4>
          <ProductTypeTag productType={product?.productType} />
        </div>
        <h3
          ref={titleRef}
          className={css({
            textStyle: 'h4',
            letterSpacing: '0.01em',
            wordBreak: 'normal',
            whiteSpace: 'normal',
            overflowWrap: 'break-word',
            overflow: 'hidden',
            textOverflow: 'ellipsis',
            verticalAlign: 'middle',
            lineClamp: '2'
          })}
        >
          {product.title}
        </h3>

        {product.shortDescription && (
          <p
            className={css({
              lineClamp: '3',
              overflow: 'hidden',
              textOverflow: 'ellipsis'
            })}
          >
            {product.shortDescription}
          </p>
        )}
        <div className={css({ mt: 'auto' })}>
          <ProductMetaAttributes product={product} />
        </div>
      </div>
    </Link>
  );
}
